#include <iostream>
#include <vector>

// Función para generar un vector con valores aleatorios en el intervalo (lower, upper)
std::vector<double> GenerateVector(const int size, const double lower, const double upper) {
    std::vector<double> result;
    for (int i = 0; i < size; ++i) {
        double randomValue = lower + static_cast<double>(std::rand()) / RAND_MAX * (upper - lower);
        result.push_back(randomValue);
    }
    return result;
}

// Función para calcular la suma de todos los valores en un vector
double ReduceSum(const std::vector<double>& vec) {
    double sum = 0.0;
    for (const double& value : vec) {
        sum += value;
    }
    return sum;
}

int main() {
    // Solicitar al usuario el tamaño del vector
    std::cout << "Ingrese el tamaño del vector: ";
    int vectorSize;
    std::cin >> vectorSize;

    // Solicitar al usuario los límites inferior y superior
    std::cout << "Ingrese el límite inferior: ";
    double lowerLimit;
    std::cin >> lowerLimit;

    std::cout << "Ingrese el límite superior: ";
    double upperLimit;
    std::cin >> upperLimit;

    // Generar el vector llamando a la función GenerateVector con los valores ingresados por el usuario
    std::vector<double> my_vector = GenerateVector(vectorSize, lowerLimit, upperLimit);

    // Mostrar el vector generado
    std::cout << "Vector generado:\n";
    for (const auto& value : my_vector) {
        std::cout << "Component: " << value << std::endl;
    }

    // Calcular la suma de los valores en el vector usando ReduceSum
    double sum = ReduceSum(my_vector);

    // Mostrar el resultado
    std::cout << "La suma de los valores en el vector es: " << sum << std::endl;

    return 0;
}
